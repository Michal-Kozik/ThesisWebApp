@{
    ViewData["Title"] = "Exercises | List";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    @model PaginatedList<Exercise>
}

<div class="border-bottom" style="margin-bottom: 20px">
    <h1 style="font-family:'Mistral'"><b>ĆWICZENIA</b></h1>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-3">
            <div class="row">
                <div class="col">
                    <div class="list-group">
                        <a class="list-group-item list-group-item-action" asp-area="" asp-controller="Exercise" asp-action="Index">Informacje</a>
                        <a class="list-group-item list-group-item-action" asp-area="" asp-controller="Exercise" asp-action="CreateExercise">Stwórz ćwiczenie</a>
                        <a class="list-group-item list-group-item-action active" asp-area="" asp-controller="Exercise" asp-action="ListExercises">Lista ćwiczeń</a>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-top: 20px">
                <div class="col text-center">
                    <p class="lead">Typ sortowania:</p>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    @{
                        var dateOrder = (ViewData["DateSortParam"].ToString() == "date") ? "active" : "";
                        var dateOrderAsc = (ViewData["DateSortParam"].ToString() == "date_asc") ? "active" : "";
                    }
                </div>
                <a asp-controller="Exercise" asp-action="ListExercises" asp-route-sortOrder="" class="btn btn-outline-secondary btn-block @dateOrder">Od najnowszego</a>
                <a asp-controller="Exercise" asp-action="ListExercises" asp-route-sortOrder="date_asc" class="btn btn-outline-secondary btn-block @dateOrderAsc">Od najstarszego</a>
            </div>
            <div class="row" style="margin-top: 20px">
                <div class="col text-center">
                    <label class="lead">Typ zadania:</label>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    @{ 
                        var anyType = (ViewData["ExerciseTypeParam"].ToString() == "any") ? "active" : "";
                        var translatingWords = (ViewData["ExerciseTypeParam"].ToString() == "translatingWords") ? "active" : "";
                        var readingTitles = (ViewData["ExerciseTypeParam"].ToString() == "readingTitles") ? "active" : "";
                        var matchingSentences = (ViewData["ExerciseTypeParam"].ToString() == "matchingSentences") ? "active" : "";
                    }
                    <a asp-controller="Exercise" asp-action="ListExercises" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-typeParam="" class="btn btn-outline-secondary @anyType" style="width: inherit">Dowolne</a>
                    <a asp-controller="Exercise" asp-action="ListExercises" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-typeParam="translatingWords" class="btn btn-outline-secondary @translatingWords" style="width: inherit">Tłumaczenie słów</a>
                    <a asp-controller="Exercise" asp-action="ListExercises" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-typeParam="readingTitles" class="btn btn-outline-secondary @readingTitles" style="width: inherit">Dopasowywanie tytułów</a>
                    <a asp-controller="Exercise" asp-action="ListExercises" asp-route-sortOrder="@ViewData["DateSortParam"]" asp-route-typeParam="matchingSentences" class="btn btn-outline-secondary @matchingSentences" style="width: inherit">Łączenie zdań</a>
                </div>
            </div>
        </div>
        <div class="col-9">
            <div class="card border-dark mb-3">
                <div class="card-header">
                    Lista ćwiczeń
                </div>
                <div class="card-body">
                    @if (Model.TotalPages < Model.PageIndex)
                    {
                        <p class="lead">Brak wyników...</p>
                    }
                    else
                    {
                        foreach (var exercise in Model)
                        {
                            <div class="list-group">
                                <a class="list-group-item list-group-item-action flex-column align-items-center" asp-controller="Exercise" asp-action="ChoosenExercise" asp-route-exerciseID="@exercise.ExerciseID" asp-route-typeOfExercise="@exercise.TypeOfExercise">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5>@exercise.Name</h5>
                                        <small class="text-muted">@exercise.Created.ToString("dd-MM-yyyy")</small>
                                    </div>
                                    <p class="mb-1">Autor: @exercise.ApplicationUser.FirstName @exercise.ApplicationUser.LastName</p>
                                    <p class="mb-1">Typ zadania: @exercise.TypeOfExercise</p>
                                    <div class="row justify-content-between">
                                        <div class="col-3">
                                            <p class="lead">Poziom: @exercise.LevelOfExercise</p>
                                        </div>
                                        <div class="col-3">
                                            <div class="progress">
                                                @{
                                                    string barColor;
                                                    if (exercise.LevelOfExercise == ExerciseLevel.A1 || exercise.LevelOfExercise == ExerciseLevel.A2)
                                                        barColor = "bg-success";
                                                    else if (exercise.LevelOfExercise == ExerciseLevel.B1 || exercise.LevelOfExercise == ExerciseLevel.B2)
                                                        barColor = "bg-warning";
                                                    else
                                                        barColor = "bg-danger";

                                                    string progressPercent;
                                                    if (exercise.LevelOfExercise != ExerciseLevel.C2)
                                                    {
                                                        progressPercent = ((int)exercise.LevelOfExercise * 16.5).ToString() + '%';
                                                    }
                                                    else
                                                    {
                                                        progressPercent = "100%";
                                                    }
                                                }
                                                <div class="progress-bar-striped @barColor" style="width: @progressPercent" role="progressbar" aria-valuemin="0" aria-valuenow="@((int)exercise.LevelOfExercise)" aria-valuemax="6"></div>
                                            </div>
                                        </div>
                                    </div>
                                </a>
                            </div>
                        }
                        <br />
                        var prevDisabled = Model.HasPreviousPage ? "" : "disabled";
                        var nextDisabled = Model.HasNextPage ? "" : "disabled";
                        <div>
                            <ul class="pagination">
                                <li class="page-item @prevDisabled">
                                    <a asp-controller="Exercise" asp-action="ListExercises" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" class="page-link">&laquo;</a>
                                </li>
                                @if (Model.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a asp-controller="Exercise" asp-action="ListExercises" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" class="page-link">@(Model.PageIndex - 1)</a>
                                    </li>
                                }
                                <li class="page-item active">
                                    <a class="page-link">@Model.PageIndex</a>
                                </li>
                                @if (Model.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a asp-controller="Exercise" asp-action="ListExercises" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" class="page-link">@(Model.PageIndex + 1)</a>
                                    </li>
                                }
                                <li class="page-item @nextDisabled">
                                    <a asp-controller="Exercise" asp-action="ListExercises" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-sortOrder="@ViewData["CurrentSort"]" class="page-link">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>